Automatic Mode Execution
------------------------

The DPS pipeline infrastructure runs a pipeline on previously-defined
reduction groups as a fully-automatic black box. To do so, it creates an
input manifest (*infiles.txt*) that contains relative paths to the input
files (one per line). The command-line interface to the
pipeline is run as::

    redux_pipe infiles.txt

The command-line interface will read in the specified input files, use
their headers to determine the observation mode, and accordingly
the steps to run and any intermediate files to save. Output files are
written to the current directory, from which the pipeline was called.
After reduction is complete, the script will generate an output manifest
(*outfiles.txt*) containing the relative paths to all output FITS files
generated by the pipeline.

Optionally, in place of a manifest file, file paths to input files may
be directly specified on the command line.  Input files may be raw
FITS files, or may be intermediate products previously produced
by the pipeline.  For example, this command will complete the reduction
for a set of FITS files in the current directory, previously reduced
through the calibration step of the pipeline::

    redux_pipe *CAL*.fits

To customize batch reductions from the command line, the *redux_pipe* interface
accepts a configuration file on the command line.  This file may contain
any subset of the full configuration file, specifying any non-default
parameters for pipeline steps.  An output directory for pipeline products
and the terminal log level may also be set on the command line.

The full set of optional command-line parameters accepted by the *redux_pipe*
interface are::

    -h, --help            show this help message and exit
    -c CONFIG, --configuration CONFIG
                          Path to Redux configuration file.
    -o OUTDIR, --out OUTDIR
                          Path to output directory.
    -l LOGLEVEL, --loglevel LOGLEVEL
                          Log level.


Manual Mode Execution
---------------------

In manual mode, the pipeline may be run interactively, via a graphical
user interface (GUI) provided by the Redux package.  The GUI is launched by
the command::

    redux

entered at the terminal prompt (:numref:`startup`).  The GUI allows
output directory specification, but it may write initial or temporary
files to the current directory, so it is recommended to start the
interface from a location to which the user has write privileges.

From the command line, the *redux* interface accepts an optional config file
(*-c*) or log level specification (*-l*), in the same way the *redux_pipe*
command does.  Any pipeline parameters provided to the interface in a
configuration file will be used to set default values; they will still be
editable from the GUI.

.. figure:: images/startup.png
   :alt: Startup screen
   :name: startup

   Redux GUI startup.


Basic Workflow
~~~~~~~~~~~~~~
To start an interactive reduction, select a set of input files, using
the File menu (**File->Open New Reduction**). This will bring up a file
dialog window (see :numref:`open_new`). All files selected will be reduced
together as a single reduction set.

.. figure:: images/open_new.png
   :alt: Open New Reduction
   :name: open_new

   Open new reduction.

Redux will decide the appropriate reduction steps from the input files,
and load them into the GUI, as in :numref:`reduction_steps`.

.. figure:: images/reduction_steps.png
   :alt: Reduction steps
   :name: reduction_steps

   Sample reduction steps. Log output from the pipeline is
   displayed in the **Log** tab.

Each reduction step has a number of parameters that can be edited
before running the step. To examine or edit these parameters,
click the **Edit** button next to the step name to bring up the
parameter editor for that step (:numref:`parameters`). Within the
parameter editor, all values may be edited.  Click **OK** to save the
edited values and close the window. Click **Reset** to restore any
edited values to their last saved values.  Click **Restore Defaults**
to reset all values to their stored defaults.
Click **Cancel** to discard all changes to the parameters and
close the editor window.

.. figure:: images/parameters.png
   :alt: Edit Parameters
   :name: parameters

   Sample parameter editor for a pipeline step.

The current set of parameters can be displayed, saved to a file,
or reset all at once using the **Parameters** menu. A previously
saved set of parameters can also be restored for use with the
current reduction (**Parameters -> Load Parameters**).

After all parameters for a step have been examined and set to the
user's satisfaction, a processing step can be run on all loaded
files either by clicking **Step**, or the **Run** button next to the
step name. Each processing step must be run in order, but if a
processing step is selected in the **Step through:** widget,
then clicking **Step** will treat all steps up through the selected
step as a single step and run them all at once. When a step has
been completed, its buttons will be grayed out and inaccessible.
It is possible to undo one previous step by clicking **Undo**.
All remaining steps can be run at once by clicking **Reduce**.
After each step, the results of the processing may be displayed
in a data viewer. After running a pipeline step or reduction,
click **Reset** to restore the reduction to the initial state,
without resetting parameter values.

Files can be added to the reduction set (**File -> Add Files**) or
removed from the reduction set (**File -> Remove Files**), but
either action will reset the reduction for all loaded files.
Select the **File Information** tab to display a table of information
about the currently loaded files (:numref:`file_info`).

.. figure:: images/file_info.png
   :alt: File information
   :name: file_info

   File information table.

Display Features
~~~~~~~~~~~~~~~~

The Redux GUI displays images for quality analysis and display (QAD)
in the DS9 FITS viewer.  DS9 is a standalone image display
tool with an extensive feature set.  See the SAO DS9 site
(http://ds9.si.edu/) for more usage information.

After each pipeline step completes, Redux may load the produced images
into DS9.  Some display options may be customized directly in DS9;
some commonly used options are accessible from the Redux interface, in the
**Data View** tab (:numref:`data_view`).

.. figure:: images/data_view.png
   :alt: Data viewer settings
   :name: data_view

   Data viewer settings and tools.

From the Redux interface, the **Display Settings** can be used to:

- Set the FITS extension to display (**First**, or edit to enter
  a specific extension), or specify that all extensions should
  be displayed in a cube or in separate frames.
- Lock individual frames together, in image or WCS coordinates.
- Lock cube slices for separate frames together, in image or
  WCS coordinates.
- Set the image scaling scheme.
- Set a default color map.
- Zoom to fit image after loading.
- Tile image frames, rather than displaying a single frame at a
  time.

Changing any of these options in the Data View tab will cause the
currently displayed data to be reloaded, with the new options.
Clicking **Reset Display Settings** will revert any edited options
to the last saved values.  Clicking **Restore Default Display Settings**
will revert all options to their default values.

In the **QAD Tools** section of the **Data View** tab, there are
several additional tools available.

Clicking the **ImExam** button
(scissors icon) launches an event loop in DS9.  After launching it,
bring the DS9 window forward, then use the keyboard to perform interactive
analysis tasks:

- Type 'a' over a source in the image to perform photometry at the
  cursor location.
- Type 'p' to plot a pixel-to-pixel comparison of all frames at the
  cursor location.
- Type 's' to compute statistics and plot a histogram of the data
  at the cursor location.
- Type 'c' to clear any previous photometry results or active plots.
- Type 'h' to print a help message.
- Type 'q' to quit the ImExam loop.

The photometry settings (the image window considered, the model fit,
the aperture sizes, etc.) may be customized in the **Photometry Settings**.
Plot settings (analysis window size, shared plot axes, etc.) may be
customized in the **Plot Settings**.
After modifying these settings, they will take effect only for new
apertures or plots (use 'c' to clear old ones first).  As for the display
settings, the reset button will revert to the last saved values
and the restore button will revert to default values.
For the pixel-to-pixel and histogram plots, if the cursor is contained within
a previously defined DS9 region (and the `regions` package is installed),
the plot will consider only pixels within the region.  Otherwise, a window
around the cursor is used to generate the plot data.  Setting the window
to a blank value in the plot settings will use the entire image.

Clicking the **Header** button (magnifying glass icon) from the
**QAD Tools** section opens a new window that displays headers
from currently loaded FITS files in text form (:numref:`headers`).
The extensions displayed depends on the extension
setting selected (in **Extension to Display**).  If a particular extension is
selected, only that header will be displayed.  If all extensions
are selected (either for cube or multi-frame display), all extension
headers will be displayed.  The buttons at the bottom of the window
may be used to find or filter the header text, or generate a table
of header keywords.  For filter or table display, a comma-separated
list of keys may be entered in the text box.

.. figure:: images/headers.png
   :alt: Header viewer
   :name: headers

   QAD FITS header viewer.

Clicking the **Save Current Settings** button (disk icon) from the
**QAD Tools** section saves all current display and photometry
settings for the current user.  This allows the user's settings to
persist across new Redux reductions, and to be loaded when Redux
next starts up.
